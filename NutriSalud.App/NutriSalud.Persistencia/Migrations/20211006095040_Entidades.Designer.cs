// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NutriSalud.Persitencia;

namespace NutriSalud.Persistencia.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20211006095040_Entidades")]
    partial class Entidades
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("NutriSalud.Dominio.Coach", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroContacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PacienteId")
                        .HasColumnType("int");

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.Property<string>("TarjetaPro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("Coachs");
                });

            modelBuilder.Entity("NutriSalud.Dominio.HistoricoPaciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("Carbohidratos")
                        .HasColumnType("float");

                    b.Property<double>("Grasa")
                        .HasColumnType("float");

                    b.Property<double>("Medidas")
                        .HasColumnType("float");

                    b.Property<double>("Palorias")
                        .HasColumnType("float");

                    b.Property<double>("Peso")
                        .HasColumnType("float");

                    b.Property<string>("Platillos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Proteinas")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("HistoricoPacientes");
                });

            modelBuilder.Entity("NutriSalud.Dominio.Nutricionista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroContacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PacienteId")
                        .HasColumnType("int");

                    b.Property<int?>("RecomendacionId")
                        .HasColumnType("int");

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.Property<string>("TarjetaPro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.HasIndex("RecomendacionId");

                    b.ToTable("Nutricionistas");
                });

            modelBuilder.Entity("NutriSalud.Dominio.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("Altura")
                        .HasColumnType("float");

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HistoricoPacienteId")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroContacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Peso")
                        .HasColumnType("float");

                    b.Property<int?>("RecomendacionId")
                        .HasColumnType("int");

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.HasIndex("HistoricoPacienteId");

                    b.HasIndex("RecomendacionId");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("NutriSalud.Dominio.Recomendacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("Calorias")
                        .HasColumnType("float");

                    b.Property<double>("Carbohidratos")
                        .HasColumnType("float");

                    b.Property<double>("Grasa")
                        .HasColumnType("float");

                    b.Property<string>("Platillos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Proteinas")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Recomendaciones");
                });

            modelBuilder.Entity("NutriSalud.Dominio.Coach", b =>
                {
                    b.HasOne("NutriSalud.Dominio.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("NutriSalud.Dominio.Nutricionista", b =>
                {
                    b.HasOne("NutriSalud.Dominio.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId");

                    b.HasOne("NutriSalud.Dominio.Recomendacion", "Recomendacion")
                        .WithMany()
                        .HasForeignKey("RecomendacionId");

                    b.Navigation("Paciente");

                    b.Navigation("Recomendacion");
                });

            modelBuilder.Entity("NutriSalud.Dominio.Paciente", b =>
                {
                    b.HasOne("NutriSalud.Dominio.HistoricoPaciente", "HistoricoPaciente")
                        .WithMany()
                        .HasForeignKey("HistoricoPacienteId");

                    b.HasOne("NutriSalud.Dominio.Recomendacion", "Recomendacion")
                        .WithMany()
                        .HasForeignKey("RecomendacionId");

                    b.Navigation("HistoricoPaciente");

                    b.Navigation("Recomendacion");
                });
#pragma warning restore 612, 618
        }
    }
}
